pkgbase=calligra
pkgname=('calligra-braindump'
         'calligra-devtools'
         'calligra-extras'
         'calligra-flow'
         'calligra-gemini'
         'calligra-handbook'
         'calligra-karbon'
         'calligra-kexi'
         'calligra-krita'
         'calligra-libs'
         'calligra-plan'
         'calligra-sheets'
         'calligra-stage'
         'calligra-words')
pkgver=2.9.11
pkgrel=4
arch=('x86_64')
url='http://www.calligra.org'
screenshot=("http://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Calligra_Stage_2.4.png/800px-Calligra_Stage_2.4.png")
license=('FDL1.2'
         'GPL2'
         'LGPL')
makedepends=('automoc4'
             'boost'
             'cmake'
             'create-resources'
             'docbook-xsl'
             'eigen3'
             'fftw'
             'freetds'
             'glew'
             'gsl'
             'icu'
             'kdelibs'
             'lcms2'
             'libdmtx'
             'libetonyek'
             'libgit2'
             'libgsf'
             'libkdcraw'
             'libmarble4'
             'libmariadbclient'
             'libodfgen'
             'libpqxx'
             'libspnav'
             'libvisio'
             'libwpd'
             'libwpg'
             'libwps'
             'opencolorio'
             'openjpeg'
             'poppler-qt4'
             'postgresql'
             'pstoedit'
             'qrencode'
             'vc'
             'xbase')
options=("debug")
groups=('calligra')
source=("http://download.kde.org/stable/${pkgbase}-${pkgver}/${pkgbase}-${pkgver}.tar.xz"
        'libwps-0.4.patch')
md5sums=('a1a4935debae64724cd4c0d17d61ae4e'
         '6ea15f8b3938838d89ea0aa08921afd1')

build() {
    # Fix build against libwps 0.4
    cd $pkgbase-$pkgver
    patch -p1 -i "$srcdir"/libwps-0.4.patch
    
    # Fix build against libmarble4
    sed -e 's|PATH_SUFFIXES marble|PATH_SUFFIXES marble4|g' -i CMakeLists.txt
    sed -e 's|#include <marble/|#include <marble4/|g' -e 's|#include "marble/|#include "marble4/|g' \
    -i plugins/reporting/maps/{*.cpp,*.h,marble/*.h} -i kexi/plugins/forms/widgets/mapbrowser/{*.cpp,*.h}
    
    cd "${srcdir}"
    mkdir -p build && cd build
    
    cmake "../${pkgbase}-${pkgver}" \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DBUILD_active=OFF \
        -DWITH_Soprano=OFF \
        -DMARBLE_INCLUDE_DIR=/usr/include/marble4 \
        -DMARBLE_GLOBAL_HEADER=/usr/include/marble4/MarbleGlobal.h \
        -DMARBLE_LIBRARIES=/usr/lib/libmarblewidget.so
    make
}

package_calligra-braindump() {
    pkgdesc="Notetaking and mindmapping application"
    depends=('calligra-libs'
             'kde-runtime')
    categories=('office')
    install=calligra-braindump.install

    cd build/braindump
    make DESTDIR="${pkgdir}" install
}

package_calligra-devtools() {
    pkgdesc="Developer utilities for Calligra"
    depends=('calligra-libs')

    cd build/devtools
    make DESTDIR="${pkgdir}" install
}

package_calligra-extras() {
    pkgdesc="User utilities for Calligra"
    depends=('calligra-libs')
    conflicts=('calligra-templates')
    replaces=('calligra-templates')
    install=calligra-extras.install

    cd build/extras
    make DESTDIR="${pkgdir}" install
}

package_calligra-flow() {
    pkgdesc="Flowchart drawing application"
    depends=('calligra-words'
             'kde-runtime')
    optdepends=('calligra-karbon: to export the charts in various formats')
    install=calligra-flow.install
    categories=('office')

    cd build/flow
    make DESTDIR="${pkgdir}" install
}

package_calligra-gemini() {
  pkgdesc="QML interface for Calligra Words and Stage"
  depends=('calligra-words' 'calligra-stage')
  install=calligra-gemini.install

  cd build/qtquick
  make DESTDIR="${pkgdir}" install
  cd "${srcdir}"/build/gemini
  make DESTDIR="${pkgdir}" install
}

package_calligra-handbook() {
    pkgdesc="Documentation for Calligra"
    options=('docs')
    categories=('documentation')

    cd build/doc/calligra
    make DESTDIR="${pkgdir}" install
}

package_calligra-karbon() {
    pkgdesc="Vector graphics editor"
    depends=('calligra-libs'
             'hicolor-icon-theme'
             'pstoedit')
    optdepends=('calligra-extras: extra Calligra utilities')
    provides=('karbon')
    categories=('graphics')
    install=calligra-karbon.install

    cd build/karbon
    make DESTDIR="${pkgdir}" install
}

package_calligra-kexi() {
    pkgdesc="Visual database management frontend"
    depends=('calligra-libs'
             'fftw'
             'glew'
             'icu'
             'sqlite3')
    optdepends=('calligra-sheets'
                'freetds'
                'libmarble4'
                'libmariadbclient'
                'libpqxx'
                'xbase')
    provides=('kexi')
    categories=('office')
    install=calligra-kexi.install

    cd build/kexi
    make DESTDIR="${pkgdir}" install
    cd ../doc/kexi
    make DESTDIR="${pkgdir}" install
}

package_calligra-krita() {
    pkgdesc="Digital painting application"
    depends=('calligra-libs'
             'fftw'
             'glew'
             'curl'
             'gsl'
             'hicolor-icon-theme'
             'kde-runtime'
             'lcms2'
             'libkdcraw'
             'opencolorio'
             'openexr'
             'poppler-qt'
             'qimageblitz'
             'shared-mime-info'
             'exiv2>=0.24'
             'vc')
    provides=('krita')
    categories=('graphics')
    install=calligra-krita.install

    cd build/krita
    make DESTDIR="${pkgdir}" install
}

package_calligra-libs() {
    pkgdesc="Libraries for Calligra"
    depends=('create-resources'
             'icu'
             'libkactivities4'
             'libmarble4'
             'lcms2'
             'libspnav'
             'libvisio'
             'libodfgen')
    optdepends=('libetonyek: Apple Keynote document importer'
                'libgsf: Microsoft Word document importer'
                'libkdcraw: support for raw images'
                'libvisio: Microsoft Visio document importer'
                'libwpg: Corel WordPerfect Graphics image importer'
                'libwps: Microsoft Works document importer'
                'pstoedit: Karbon EPS import filter')
    conflicts=('calligra-3rdparty'
               'calligra-data'
               'calligra-filters'
               'calligra-interfaces'
               'calligra-pics'
               'calligra-plugins'
               'calligra-servicetypes')
    replaces=('calligra-3rdparty'
              'calligra-data'
              'calligra-filters'
              'calligra-interfaces'
              'calligra-pics'
              'calligra-plugins'
              'calligra-servicetypes')
    install=calligra-libs.install

    for d in 3rdparty data filters interfaces libs pics plugins servicetypes; do
        cd "${srcdir}"/build/${d}
        make DESTDIR="${pkgdir}" install
    done
}

package_calligra-plan() {
    pkgdesc="Project management application"
    depends=('calligra-words'
             'hicolor-icon-theme'
             'calligra-libs')
    categories=('office')
    install=calligra-plan.install

    cd build/plan
    make DESTDIR="${pkgdir}" install
}

package_calligra-sheets() {
    pkgdesc="Spreadsheet application"
    depends=('calligra-libs'
             'gsl'
             'hicolor-icon-theme'
             'kde-runtime')
    categories=('office')
    install=calligra-sheets.install

    cd build/sheets
    make DESTDIR="${pkgdir}" install
}

package_calligra-stage() {
    pkgdesc="Presentation application"
    depends=('calligra-libs'
             'hicolor-icon-theme')
    categories=('office')
    install=calligra-stage.install

    cd build/stage
    make DESTDIR="${pkgdir}" install
}

package_calligra-words() {
    pkgdesc="Word processor"
    depends=('calligra-libs'
             'hicolor-icon-theme')
    categories=('office')
    install=calligra-words.install

    cd build/words
    make DESTDIR="${pkgdir}" install
}
