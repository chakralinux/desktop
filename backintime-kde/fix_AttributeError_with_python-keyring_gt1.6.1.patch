=== modified file 'common/config.py'
--- a/common/config.py	2013-09-23 18:39:11 +0000
+++ b/common/config.py	2013-10-09 18:34:43 +0000
@@ -582,14 +582,6 @@
             return False
         return True
 
-    def get_keyring_backend(self):
-        #?Backend used for \fIprofile<N>.snapshots.<MODE>.password.save\fR
-        #?;gnomekeyring|kwallet
-        return self.get_str_value('keyring.backend', '')
-
-    def set_keyring_backend(self, value):
-        self.set_str_value('keyring.backend', value)
-        
     def get_keyring_service_name( self, profile_id = None, mode = None, pw_id = 1 ):
         if mode is None:
             mode = self.get_snapshots_mode(profile_id)

=== modified file 'common/password.py'
--- a/common/password.py	2013-09-09 19:58:00 +0000
+++ b/common/password.py	2013-10-09 18:34:43 +0000
@@ -249,8 +249,7 @@
         self.db_usr = {}
         self.fifo = password_ipc.FIFO(self.config.get_password_cache_fifo())
         
-        backend = self.config.get_keyring_backend()
-        self.keyring_supported = tools.set_keyring(backend)
+        self.keyring_supported = tools.keyring_supported()
     
     def run(self):
         """
@@ -354,8 +353,7 @@
         self.fifo = password_ipc.FIFO(self.config.get_password_cache_fifo())
         self.db = {}
         
-        backend = self.config.get_keyring_backend()
-        self.keyring_supported = tools.set_keyring(backend)
+        self.keyring_supported = tools.keyring_supported()
     
     def get_password(self, parent, profile_id, mode, pw_id = 1, only_from_keyring = False):
         """

=== modified file 'common/tools.py'
--- a/common/tools.py	2013-09-23 18:39:11 +0000
+++ b/common/tools.py	2013-10-09 18:34:43 +0000
@@ -500,15 +500,16 @@
     if key in env.keys():
         env_file.set_str_value(key, env[key])
 
-def set_keyring(prefered):
-    if prefered in ('', 'gnomekeyring'):
-        backends = (keyring.backend.GnomeKeyring(), keyring.backend.KDEKWallet())
-    elif prefered == 'kwallet':
-        backends = (keyring.backend.KDEKWallet(), keyring.backend.GnomeKeyring())
-    for backend in backends:
-        if backend.supported() == 1:
-            keyring.set_keyring(backend)
-            return True
+def keyring_supported():
+    try:
+        backends = (keyring.backends.SecretService.Keyring,
+                    keyring.backends.Gnome.Keyring,
+                    keyring.backends.kwallet.Keyring)
+    except AttributeError:
+        backends = (keyring.backend.GnomeKeyring,
+                    keyring.backend.KDEKWallet)
+    if isinstance(keyring.get_keyring(), backends):
+        return True
     return False
 
 

=== modified file 'gnome/app.py'
--- a/gnome/app.py	2013-09-07 13:27:55 +0000
+++ b/gnome/app.py	2013-10-09 18:34:43 +0000
@@ -20,6 +20,7 @@
 import os.path
 import stat
 import sys
+import keyring
 
 if len( os.getenv( 'DISPLAY', '' ) ) == 0:
     os.putenv( 'DISPLAY', ':0.0' )

=== modified file 'gnome/settingsdialog.py'
--- a/gnome/settingsdialog.py	2013-09-11 15:00:58 +0000
+++ b/gnome/settingsdialog.py	2013-10-09 18:34:43 +0000
@@ -27,7 +27,6 @@
 import datetime
 import gettext
 import subprocess
-import keyring
 
 import config
 import messagebox
@@ -190,11 +189,7 @@
         self.cb_password_save = get('cb_password_save')
         self.cb_password_use_cache = get('cb_password_use_cache')
 
-        backend = self.config.get_keyring_backend()
-        if len(backend) <= 0:
-            backend = 'gnomekeyring'
-            self.config.set_keyring_backend(backend)
-        self.keyring_supported = tools.set_keyring(backend)
+        self.keyring_supported = tools.keyring_supported()
         self.cb_password_save.set_sensitive(self.keyring_supported)
 
         #automatic backup mode store

=== modified file 'kde4/settingsdialog.py'
--- a/kde4/settingsdialog.py	2013-09-12 19:02:08 +0000
+++ b/kde4/settingsdialog.py	2013-10-09 18:34:43 +0000
@@ -23,7 +23,6 @@
 import gettext
 import copy
 import subprocess
-import keyring
 
 from PyQt4.QtGui import *
 from PyQt4.QtCore import *
@@ -253,11 +252,7 @@
         self.cb_password_use_cache = QCheckBox( QString.fromUtf8( _( 'Cache Password for Cron (Security issue: root can read password)' ) ), self )
         vlayout.addWidget( self.cb_password_use_cache )
 
-        backend = self.config.get_keyring_backend()
-        if len(backend) <= 0:
-            backend = 'kwallet'
-            self.config.set_keyring_backend(backend)
-        self.keyring_supported = tools.set_keyring(backend)
+        self.keyring_supported = tools.keyring_supported()
         self.cb_password_save.setEnabled(self.keyring_supported)
 
         #mode change

