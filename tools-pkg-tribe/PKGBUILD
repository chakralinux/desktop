#
# Chakra Packages for Chakra, part of chakra-project.org
#
# maintainer (i686): Phil Miller <philm[at]chakra-project[dog]org>
# maintainer (x86_64): Manuel Tortosa <manutortosa[at]chakra-project[dot]org>

# include global config
source ../_buildscripts/${current_repo}-${_arch}-cfg.conf


#
# package info
#
pkgname=tribe
pkgver=0.3.45.2
pkgrel=1
pkgdesc="Tribe - Chakra LiveCD Installer"
url="http://git.chakra-project.org/chakra/"
license="GPL"
arch=('i686' 'x86_64')
depends=('kdelibs' 'kdeedu-marble>=4.5.80' 'squashfs-tools' "tribe-partitionmanager>=$pkgver")
makedepends=('cmake' 'kdelibs' 'kdeedu-marble>=4.5.80' 'kdebase-workspace')
provides=('tribe')
replaces=('kdemod-tribe-svn' 'kdemod-tribe')
conflicts=('chakra-tribe' 'tribe-svn' 'kdemod-partitionmanager' 'kdemod-tribe' 'kdemod-tribe-debug' 'kdemod-tribe-partitionmanager')
options=('!splithdr' '!splitdbg')
source=("http://chakra-project.org/sources/tribe/tribe-$pkgver.tar.gz")
md5sums=('8fb3bb1a6f769cfd400ba48833361d22')

groups=('kde-uninstall')
install=tools-tribe.install

#
# build function
#
build()
{
        cd "${srcdir}"

        # fixes
        #cd "${srcdir}/chakra-$pkgname/src"
        #patch -Np0 -i ${srcdir}/../root-pw.patch || return 1

        cd "${srcdir}/chakra-$pkgname"

	# add pkgver to tribe
	sed -i -e "s~source build/from git~Build: ${pkgver}-${pkgrel} (Chakra)~g" config-tribe.h.cmake
	sed -i -e "s~git-checkout~${pkgver}~g" "${srcdir}/chakra-$pkgname/scripts/postinstall-functions/job-initialize-target"
	# fix keyboard routine
	sed -i -e "s~HAL~XORG~g" "${srcdir}/chakra-$pkgname/scripts/postinstall-functions/job-setup-xorg"
	sed -i -e "s~etc/hal/fdi/policy/10-keymap.fdi~etc/X11/xorg.conf.d/10-keyboard.conf~g" "${srcdir}/chakra-$pkgname/scripts/postinstall-functions/job-setup-xorg"
	cmake . -DCMAKE_INSTALL_PREFIX=${_installprefix} \
		-DCMAKE_BUILD_TYPE=${_build_type} \
		-DCMAKE_SKIP_RPATH=ON \
		-DCMAKE_{SHARED,MODULE,EXE}_LINKER_FLAGS='-Wl,--no-undefined -Wl,--as-needed' || return 1

	msg "Starting make..."
	make || return 1

	msg "Make successful, installing..."
	make DESTDIR=$startdir/pkg install || return 1

	# remove nasty files
	find $startdir/pkg/ -name ".git" -type d -exec rm -fr {} +

	# remove release notes
	rm -v $pkgdir/usr/share/tribe/config/RELEASE_NOTES.html
}