#
# KDE SC Packages for Chakra, part of chakra-project.org
#
# maintainer Manuel Tortosa <manutortosa[at]chakra-project[dot]org>

# include global config
source ../_buildscripts/${current_repo}-${_arch}-cfg.conf

pkgbase=('kdesdk')
pkgname=('kdesdk-cervisia'
	 'kdesdk-dolphin-plugins'
         'kdesdk-kapptemplate'
         'kdesdk-kcachegrind'
#	 'kdesdk-kdeaccounts-plugin'
#        'kdesdk-kdepalettes'  
         'kdesdk-kioslaves'
         'kdesdk-kmtrace'
         'kdesdk-kompare'
         'kdesdk-kpartloader'
         'kdesdk-kprofilemethod'
#        'kdesdk-kspy'
         'kdesdk-kstartperf'
         'kdesdk-kuiviewer'
         'kdesdk-lokalize'
         'kdesdk-okteta'
         'kdesdk-poxml'
         'kdesdk-scripts'
         'kdesdk-strigi-analyzers'
	 'kdesdk-thumbnailers'
         'kdesdk-umbrello')

arch=('x86_64')
pkgver=${_kdever}
pkgrel=1

pkgdesc="KDE Standard Development Toolkit"
url="http://www.kde.org"
license=('GPL' 'LGPL' 'FDL')

options=('docs' '!splithdr' 'splitdbg' 'log')

makedepends=('pkgconfig' 'cmake' 'automoc4' 'boost' "kde-runtime>=${_kdever}" 'antlr2' 'hunspell'
             "kdepimlibs>=${_kdever}" 'subversion' "kdebindings-pykde4>=${_kdever}" "kde-baseapps-konqueror>=${_kdever}" 'java-runtime' 'docbook-xsl')

source=("$_mirror/${pkgbase}-$_kdever.tar.xz")
md5sums=(`grep ${pkgbase}-$_kdever.tar.xz ../kde-sc.md5 | cut -d" " -f1`)

build() {
	cd ${srcdir}/${pkgbase}-${pkgver}

	msg "starting build ..."
	cmake . -DCMAKE_BUILD_TYPE=${_build_type} \
		-DCMAKE_INSTALL_PREFIX=${_installprefix} \
		-DCMAKE_SKIP_RPATH=ON 
	make 
}


package_kdesdk-dolphin-plugins() {
	pkgdesc='Extra Dolphin plugins'
	depends=("kde-baseapps-dolphin>=${_kdever}" 'subversion' 'git' "kdesdk-kompare>=${_kdever}")
        optdepends=('bzr: bazaar support'
                    'git: git support'
                    'mercurial: hg support'
                    'subversion: svn support')
        categories=('programming')
	install=${pkgbase}.install

	splitdirs="git svn bazaar hg"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/dolphin-plugins/${i}
			make DESTDIR=${pkgdir} install 
		done
}

package_kdesdk-cervisia() {
	pkgdesc="A CVS GUI frontend for KDE"
	screenshot="http://www.kde.org/images/screenshots/cervisia.png"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
        conflicts=('kdesdk-doc')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/cervisia
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kapptemplate() {
	pkgdesc="KDE application template generator"
	screenshot="http://www.kde.org/images/screenshots/kapptemplate.png"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
        conflicts=('kdesdk-doc')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kapptemplate
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kcachegrind() {
	pkgdesc="KDE profiler visualization"
	screenshot="http://www.kde.org/images/screenshots/kcachegrind.png"
	depends=("kde-runtime>=${_kdever}" "python2")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
        conflicts=('kdesdk-doc')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kcachegrind
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kdeaccounts-plugin() {
	pkgdesc="Addressbook plugin that puts names/email addresses of all KDE SVN accounts into an addressbook"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kdeaccounts-plugin
	make DESTDIR=${pkgdir} install
}

package_kdesdk-kdepalettes() {
	pkgdesc='Palettes for the Gimp that match the KDE standard color palette'
	optdepends=('gimp')

	install -D -m644 $srcdir/${pkgbase}-${pkgver}/kdepalettes/KDE_Gimp \
		$pkgdir/usr/share/gimp/2.0/palettes/KDE.gpl
}

package_kdesdk-kioslaves() {
	pkgdesc='KDED Subversion Module'
	depends=("kde-runtime>=${_kdever}" 'subversion')
	categories=('programming')
	provides=('kdesdk-kioslave')
        conflicts=('kdesdk-common' 'kdesdk-kioslave')
	replaces=('kdesdk-common' 'kdesdk-kioslave')

	cd ${srcdir}/${pkgbase}-${pkgver}/kdesdk-kioslaves
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kmtrace() {
	pkgdesc="A KDE memory leak tracer"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
        conflicts=('kdesdk-doc')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-utils/kmtrace
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kompare() {
	pkgdesc="A KDE visual diff viewer"
	screenshot="http://www.kde.org/images/screenshots/kompare.png"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
        conflicts=('kdesdk-doc')
	install=${pkgbase}.install

        cd ${srcdir}/${pkgbase}-${pkgver}/kompare
	make DESTDIR=${pkgdir} install
}

package_kdesdk-kpartloader() {
	pkgdesc="KPartloader is a very simple application to test loading of a KPart."
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-utils/kpartloader
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kprofilemethod() {
	pkgdesc="Macros for profiling using QTime"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-utils/kprofilemethod
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kspy() {
	pkgdesc='An Object Inspector for Qt/KDE applications'
        depends=("kde-runtime>=${_kdever}")
        groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
        categories=('programming')
        install=${pkgbase}.install

        cd ${srcdir}/${pkgbase}-${pkgver}/kdesdk-kspy
        make DESTDIR=${pkgdir} install 
}

package_kdesdk-kstartperf() {
	pkgdesc="Measures startup time for KDE applications"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-utils/kstartperf
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-kuiviewer() {
	pkgdesc="KUIViewer is a utility to display and test .ui-files"
	screenshot="http://www.kde.org/images/screenshots/kuiviewer.png"
	depends=("kde-runtime>=${_kdever}")
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-utils/kuiviewer
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-lokalize() {
	pkgdesc="Computer aided translation system"
	screenshot="http://www.kde.org/images/screenshots/lokalize.png"
	depends=("kde-runtime>=${_kdever}" "kdebindings-pykde4>=${_kdever}" "kdesdk-strigi-analyzers>=${_kdever}" "hunspell")
	optdepends=('translate-toolkit: enable extra python script')
        conflicts=('kdesdk-doc')
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/lokalize
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-okteta() {
	pkgdesc="Okteta is a simple editor for the raw data of files, also known as a hex editor."
	screenshot="http://www.kde.org/images/screenshots/okteta.png"
	depends=("kde-runtime>=${_kdever}" "kde-runtime>=${_kdever}"
		 "kde-baseapps>=${_kdever}")
	replaces=('kdeutils-okteta')
        conflicts=('kdesdk-doc')
	groups=("kde" "kde-devel" "kdesdk" "kde-uninstall")
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/okteta
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-poxml() {
	pkgdesc="Tools for using .po-files to translate DocBook XML files"
	depends=("kde-runtime>=${_kdever}" 'qt' 'antlr2')
        conflicts=('kdesdk-doc')
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/poxml
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-scripts() {
	pkgdesc="Extra scripts for the KDE SDK"
	depends=("kde-runtime>=${_kdever}" 'python')
        conflicts=('kdesdk-doc')
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/kde-dev-scripts
	make DESTDIR=${pkgdir} install 
}


package_kdesdk-strigi-analyzers() {
	pkgdesc='Strigi-Analyzer for KDE SDK'
	depends=("kdelibs>=${_kdever}")
	provides=('kdesdk-strigi-analyzer')
	replaces=('kdesdk-strigi-analyzer')
	conflicts=('kdesdk-common' 'kdesdk-strigi-analyzer')

	cd ${srcdir}/${pkgbase}-${pkgver}/kdesdk-strigi-analyzers
	make DESTDIR=${pkgdir} install 
}

package_kdesdk-thumbnailers() {
        pkgdesc="KDE SDK thumbnailers for several development files"
        depends=("kde-runtime>=${_kdever}")
        groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
        categories=('programming')
        install=${pkgbase}.install
        replaces=('po-thumbnailer')
        conflicts=('po-thumbnailer')
        provides=('po-thumbnailer')

        cd ${srcdir}/${pkgbase}-${pkgver}/kdesdk-thumbnailers
        make DESTDIR=${pkgdir} install 
}

package_kdesdk-umbrello() {
	pkgdesc="An UML modeling tool for KDE"
	screenshot="http://uml.sourceforge.net/screenshots/umbrello-2.0.png"
	depends=("kde-runtime>=${_kdever}")
        conflicts=('kdesdk-doc')
	groups=("kde" "kde-devel" "kde-uninstall" "kdesdk")
	categories=('programming')
	install=${pkgbase}.install

	cd ${srcdir}/${pkgbase}-${pkgver}/umbrello
	make DESTDIR=${pkgdir} install 
}
