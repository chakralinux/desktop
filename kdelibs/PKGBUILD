# Maintainer:   H W Tovetj√§rn (totte) <totte@tott.es>
# Contributors: Manuel Tortosa <manutortosa@chakra-project.org>

# Include global configuration
source ../_buildscripts/${current_repo}-${_arch}-cfg.conf

pkgname="kdelibs"
arch=('x86_64')
pkgver=${_kdever}
pkgrel=2
pkgdesc="KDE Core Libraries"
url="http://www.kde.org"
license=('GPL'
         'LGPL'
         'FDL')
options=('docs'
         '!header'
         'debug'
         'log')
depends=("${_qtpkg}>=${_qtver}"
         "chakra-common>=${_kdever}"
         "oxygen-icons>=${_kdever}" 
         'shared-mime-info'
         'upower'
         'udisks2'
         'xz>=5.0.0'
         'enchant'
         'jasper'
         'openexr'
         'giflib'
         'strigi'
         'libxtst'
         'soprano>=2.8'
         'ca-certificates'
         'xdg-utils'
         'qca'
         'polkit-qt>=0.98.1'
         'libxss'
         'phonon'
         'shared-desktop-ontologies>=0.7'
         'attica>=0.4.2'
         'krb5'
         'libxcursor'
         'libutempter'
         'hicolor-icon-theme'
         'libdbusmenu-qt'
         'grantlee>=0.3.0'
         'media-player-info'
         'qtwebkit'
         'systemd'
         'pcre')
makedepends=('pkg-config'
             'cmake'
             'automoc4'
             'intltool'
             'avahi'
             'libgl'
             'aspell'
             'hspell'
             'shared-mime-info' 
             'docbook-xsl'
             'docbook-xml'
             'bzip2>=1.0.6'
             'libzip'
             'libpulse')
optdepends=('phonon-gstreamer: GStreamer Phonon backend (default)'
            'phonon-xine:      Xine Phonon backend'
            'phonon-mplayer:   MPlayer Phonon backend'
            'phonon-vlc:       VLC Phonon backend'
            'avahi:            Service discovery on your local network'
            'aspell:           Spell checking'
            'hspell:           Hebrew spell checking')
provides=("${pkgname}=${_kdever}"
          "kdelibs-doc")
replaces=('kdelibs-experimental'
          'arts'
          'kdelibs-doc')
groups=("kde"
        "kde-minimal"
        "kde-uninstall")
conflicts=("kdelibs-doc")
install=${pkgname}.install
source=($_mirror/${pkgname}-$_kdever.tar.xz
        01_chakra_tag.patch
        02_kde_applications_menu.patch
        03_chakra_menu.patch
        MergeDir.patch
        dbus_system_bus_name_instead_of_PID_for_authentication-security.patch)
sha256sums=(`grep $pkgname-$_kdever.tar.xz  ../checksums.txt | cut -d " " -f1`
#sha256sums=('d291b4bc159a3f686ad93ff3dfbe90a0a7e33600357e8390c84154ec050efc82'
            '029e2d07c5fc8676d143b903aa181fc470e5b469d49ccf107e19031f562bf4e3'
            'b2d25c76081ea6bb31d90c4c6b619ce64ac36de3a6eefb2f9990d3dbf8cd9c91'
            '505e9e5e969be5094b3f713b865d5927cc3de1f4693915174732b20793228c4f'
            'd7d2fac1ceb1551081a5f3fa860c14d4aeb0c774d56067e931c20b8d79c4450f'
            'ab0164407de4b7435e86c011f06c0b3688ead93789999537c47d55403acd9e54')

build() {
    # main patches
    msg "Applying patches..."
    cd ${srcdir}/${pkgname}-${pkgver}
    patch -Np1 -i ${srcdir}/01_chakra_tag.patch
    patch -Np1 -i ${srcdir}/02_kde_applications_menu.patch
    patch -Np1 -i ${srcdir}/03_chakra_menu.patch
    
    # http://quickgit.kde.org/?p=kdelibs.git&a=commitdiff&h=e4e7b53b71e2659adaf52691d4accc3594203b23&hp=03272a9f2e00e146bfa3b83467fdc28f72a4e194&o=plain
    patch -Np1 -i ${srcdir}/dbus_system_bus_name_instead_of_PID_for_authentication-security.patch

    # right positioning of applications' entries in kmenu
    patch -p1 -i ${srcdir}/MergeDir.patch
    cd ${srcdir}
    rm -rf build
    mkdir -p build && cd build
    cmake ../${pkgname}-${pkgver} \
        -DCMAKE_BUILD_TYPE=${_build_type} \
        -DCMAKE_INSTALL_PREFIX=${_installprefix} \
        -DSYSCONF_INSTALL_DIR=/etc \
        -DHTML_INSTALL_DIR=/usr/share/doc/kde/html \
        -DKDE_DISTRIBUTION_TEXT='Chakra' \
        -DKDE_DEFAULT_HOME='.kde4' \
        -DWITH_FAM=OFF \
        -DWITH_HUpnp=OFF \
        -DCMAKE_SKIP_RPATH=ON \
        -DWITH_SOLID_UDISKS2=ON \
        -DCMAKE_{SHARED,MODULE,EXE}_LINKER_FLAGS='-Wl,--no-undefined -Wl,--as-needed'
    make VERBOSE=1
}

package() {
    cd ${srcdir}/build
    make DESTDIR=${pkgdir} install
    # link cert bundle to the one from ca-certificates
    rm -f ${pkgdir}/usr/share/apps/kssl/ca-bundle.crt
    ln -sf /etc/ssl/certs/ca-certificates.crt ${pkgdir}/usr/share/apps/kssl/ca-bundle.crt
}
