diff -rupN calibre.orig//src/calibre/linux.py calibre/src/calibre/linux.py
--- calibre.orig//src/calibre/linux.py	2010-09-17 22:38:02.000000000 +0200
+++ calibre/src/calibre/linux.py	2010-09-19 15:50:15.029705851 +0200
@@ -334,52 +323,39 @@ class PostInstall:
 
             with TemporaryDirectory() as tdir:
                 with CurrentDir(tdir):
-                    render_img('mimetypes/lrf.png', 'calibre-lrf.png')
-                    check_call('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png application-lrf', shell=True)
-                    self.icon_resources.append(('mimetypes', 'application-lrf', '128'))
-                    check_call('xdg-icon-resource install --noupdate --context mimetypes --size 128 calibre-lrf.png text-lrs', shell=True)
-                    self.icon_resources.append(('mimetypes', 'application-lrs',
-                    '128'))
-                    render_img('lt.png', 'calibre-gui.png')
-                    check_call('xdg-icon-resource install --noupdate --size 128 calibre-gui.png calibre-gui', shell=True)
-                    self.icon_resources.append(('apps', 'calibre-gui', '128'))
-                    render_img('viewer.png', 'calibre-viewer.png')
-                    check_call('xdg-icon-resource install --size 128 calibre-viewer.png calibre-viewer', shell=True)
-                    self.icon_resources.append(('apps', 'calibre-viewer', '128'))
+                    dir = os.path.join(self.opts.staging_sharedir,'../pixmaps')
+                    os.mkdir(dir)
+                    render_img('mimetypes/lrf.png', os.path.join(dir,'calibre-lrf.png'))
+                    render_img('lt.png', os.path.join(dir, 'calibre-gui.png'))
+                    render_img('viewer.png', os.path.join(dir, 'calibre-viewer.png'))
 
                     mimetypes = set([])
                     for x in all_input_formats():
                         mt = guess_type('dummy.'+x)[0]
-                        if mt and 'chemical' not in mt:
+                        if mt and 'chemical' not in mt and 'text' not in mt and 'pdf' not in mt and 'xhtml' not in mt:
                             mimetypes.add(mt)
 
                     def write_mimetypes(f):
                         f.write('MimeType=%s;\n'%';'.join(mimetypes))
 
-                    f = open('calibre-lrfviewer.desktop', 'wb')
+                    dir = os.path.join(self.opts.staging_sharedir,'../applications')
+                    os.mkdir(dir)
+                    f = open(os.path.join(dir, 'calibre-lrfviewer.desktop'), 'wb')
                     f.write(VIEWER)
                     f.close()
-                    f = open('calibre-ebook-viewer.desktop', 'wb')
+                    f = open(os.path.join(dir, 'calibre-ebook-viewer.desktop'), 'wb')
                     f.write(EVIEWER)
                     write_mimetypes(f)
                     f.close()
-                    f = open('calibre-gui.desktop', 'wb')
+                    f = open(os.path.join(dir, 'calibre-gui.desktop'), 'wb')
                     f.write(GUI)
                     write_mimetypes(f)
                     f.close()
-                    des = ('calibre-gui.desktop', 'calibre-lrfviewer.desktop',
-                            'calibre-ebook-viewer.desktop')
-                    for x in des:
-                        cmd = ['xdg-desktop-menu', 'install', './'+x]
-                        if x != des[-1]:
-                            cmd.insert(2, '--noupdate')
-                        check_call(' '.join(cmd), shell=True)
-                        self.menu_resources.append(x)
-                    f = open('calibre-mimetypes', 'wb')
+                    dir = os.path.join(self.opts.staging_sharedir,'../mime/packages/')
+                    os.makedirs(dir)
+                    f = open(os.path.join(dir, 'calibre.xml'), 'wb')
                     f.write(MIME)
                     f.close()
-                    self.mime_resources.append('calibre-mimetypes')
-                    check_call('xdg-mime install ./calibre-mimetypes', shell=True)
         except Exception:
             if self.opts.fatal_errors:
                 raise
