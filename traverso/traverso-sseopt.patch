diff -rupN traverso-0.49.1.old/CMakeLists.txt traverso-0.49.1/CMakeLists.txt
--- traverso-0.49.1.old/CMakeLists.txt	2009-03-28 04:48:39.000000000 -0400
+++ traverso-0.49.1/CMakeLists.txt	2009-04-30 13:20:49.000000000 -0400
@@ -42,7 +42,7 @@ OPTION(WANT_THREAD_CHECK	"Checks at runt
 OPTION(WANT_VECLIB_OPTIMIZATIONS "Build with veclib optimizations (Only for PPC based Mac OS X)" OFF)
 OPTION(AUTOPACKAGE_BUILD "Build traverso with autopackage tools" OFF)
 OPTION(DETECT_HOST_CPU_FEATURES "Detect the feature set of the host cpu, and compile with an optimal set of compiler flags" ON)
-
+OPTION(WANT_SSE "Use sse instruction set. This option is only effective if DETECT_HOST_CPU_FEATURES is OFF." OFF)
 
 SET(MAIN_DIR_NAME "src")
 IF(TAG_VERSION)
@@ -496,6 +496,28 @@ IF(UNIX)
 			LIST(APPEND TRAVERSO_DEFINES -DARCH_X86)
 			SET(IS_ARCH_X86 TRUE)
 		ENDIF(uname_invoke_result MATCHES i[456]86)
+	ELSE(NOT WANT_DEBUG AND DETECT_HOST_CPU_FEATURES)
+		IF(WANT_SSE)
+			SET(CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_CXX_FLAGS_RELEASE} -msse -mfpmath=sse")
+			LIST(APPEND TRAVERSO_DEFINES -DSSE_OPTIMIZATIONS -DUSE_XMMINTRIN)
+			
+			execute_process(
+                        COMMAND uname -m
+                        OUTPUT_VARIABLE uname_invoke_result
+                        RESULT_VARIABLE uname_failed
+                	)
+
+			IF(uname_invoke_result MATCHES i[456]86)
+				LIST(APPEND TRAVERSO_DEFINES -DARCH_X86)
+				SET(IS_ARCH_X86 TRUE)
+			ENDIF(uname_invoke_result MATCHES i[456]86)
+
+			IF(uname_invoke_result MATCHES x86_64)
+				LIST(APPEND TRAVERSO_DEFINES -DUSE_X86_64_ASM -DARCH_X86)
+				SET(IS_ARCH_X86_64 TRUE)
+			ENDIF(uname_invoke_result MATCHES x86_64)
+			SET(HOST_SUPPORTS_SSE TRUE)
+		ENDIF(WANT_SSE)
 	ENDIF(NOT WANT_DEBUG AND DETECT_HOST_CPU_FEATURES)
 
 
diff -rupN traverso-0.49.1.old/src/common/fpu.cc traverso-0.49.1/src/common/fpu.cc
--- traverso-0.49.1.old/src/common/fpu.cc	2009-03-28 04:48:39.000000000 -0400
+++ traverso-0.49.1/src/common/fpu.cc	2009-04-30 13:19:46.000000000 -0400
@@ -35,7 +35,7 @@ FPU::FPU ()
 
 #ifndef ARCH_X86
 	return;
-#endif
+#else
 	
 #ifndef USE_X86_64_ASM
 	asm volatile (
@@ -108,6 +108,7 @@ FPU::FPU ()
 			free (fxbuf);
 		}
 	}
+#endif /* ARCH_X86 */
 }			
 
 FPU::~FPU ()
