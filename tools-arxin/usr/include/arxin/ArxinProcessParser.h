/***************************************************************************
 *   Copyright (C) 2008 by Dario Freddi                                    *
 *   drf54321@yahoo.it                                                     *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *
 ***************************************************************************/

#ifndef ARXINPROCESSPARSER_H_
#define ARXINPROCESSPARSER_H_

#include <QProcess>
#include "arxin_macros.h"

/** \class ArxinProcessParser ArxinProcessParser.h
 * \brief General process output parser.
 *
 * This class lets you get and parse output of a process easily.
 * It is a reimplementation of QProcess, and in fact inherits from it, and has a similar functionality.
 *
 * The main difference with QProcess is that it is self-sufficient when it comes
 * to parsing the output and returning it, so you can get all standard output and error
 * everytime you want, in addition to traditional QProcess calls.
 */

class ARXIN_EXPORT ArxinProcessParser : public QProcess//TODO: Split out an ArxinPythonProcessParser...
{
    Q_OBJECT

public:
    ArxinProcessParser(QObject *parent = 0);
    ~ArxinProcessParser();

public slots:
    /**
    * Loads a command. This command will be used upon next call of startProcess()
    * @see startProcess()
    * @param cmd The command of the process
    */
    void loadProcess(const QString &cmd);


    /**
    * Returns all the output generated by the process on the stdout channel.
    * @see readAllStdErr()
    * @returns All stdout output
    */
    QStringList readAllStdOut();

    /**
    * Returns all the output generated by the process on the stderr channel.
    * @see readAllStdOut()
    * @returns All stderr output
    */
    QStringList readAllStdErr();

    /**
    * Starts the currently loaded process.
    * @see loadProcess()
    */
    void startProcess();

    /**
     * Waits until the process ends. This is a convenience slot wrapper around
     * QProcess::waitForFinished(). Please note that this may block your application.
     */
    bool slotWaitForFinished() {
        return waitForFinished();
    }

private slots:
    void processEnded(int exitCode, QProcess::ExitStatus exitStatus);

private:
    QString command;
    QByteArray procOut;
    QByteArray procErr;
};

#endif /*ARXINPROCESSPARSER_H_*/
