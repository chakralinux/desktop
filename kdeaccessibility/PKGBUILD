#
# KDE SC Packages for Chakra, part of chakra-project.org
#
# maintainer (i686): Phil Miller <philm[at]chakra-project[dog]org>
# maintainer (x86_64): Manuel Tortosa <manutortosa[at]chakra-project[dot]org>

# include global config
source ../_buildscripts/${current_repo}-${_arch}-cfg.conf

#
# package info
#
pkgbase="kdeaccessibility"
pkgname=('kdeaccessibility-common'
         'kdeaccessibility-doc'
         'kdeaccessibility-colorschemes'
         'kdeaccessibility-iconthemes'
         'kdeaccessibility-kmag'
         'kdeaccessibility-kmousetool'
         'kdeaccessibility-kmouth'
         'kdeaccessibility-jovie')

arch=('i686' 'x86_64')
pkgver=${_kdever}
pkgrel=1

pkgdesc="split package"
url="http://www.kde.org"
license=('GPL' 'LGPL' 'FDL')

install=${pkgbase}.install
options=('docs' '!splithdr' 'splitdbg' 'log')

makedepends=('pkgconfig' 'cmake' 'automoc4' "kdebase-runtime>=${_kdever}" "kdelibs>=${_kdever}" "speech-dispatcher>=0.6.7" 'opentts')

source=($_mirror/${pkgbase}-$_kdever.tar.bz2)
md5sums=(`grep ${pkgbase}-$_kdever.tar.bz2 ../kde-sc.md5 | cut -d" " -f1`)



#
# build function
#
build()
{
	cd ${srcdir}/${pkgbase}-${pkgver}

	msg "starting build ..."
	cmake . -DCMAKE_BUILD_TYPE=${_build_type} \
		-DCMAKE_INSTALL_PREFIX=${_installprefix} \
		-DCMAKE_SKIP_RPATH=ON \
		-DCMAKE_{SHARED,MODULE,EXE}_LINKER_FLAGS='-Wl,--no-undefined -Wl,--as-needed'

	make || return 1
}



#
# split-install functions
#
package_kdeaccessibility-common()
{
	pkgdesc="KDE Accessibility Aids - Transition package"

}

package_kdeaccessibility-doc()
{
	pkgdesc="KDE Accessibility Aids - Documentation"
	groups=("${pkgbase}" "kde" "kde-uninstall" "kde-doc")

	splitdirs="doc"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-colorschemes()
{
	pkgdesc="Accessible Color Schemes for KDE"
	depends=("kdebase-runtime>=${_kdever}")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="ColorSchemes"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-iconthemes()
{
	pkgdesc="Accessibly Icon Themes for KDE"
	depends=("kdebase-runtime>=${_kdever}")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="IconThemes"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-kmag()
{
	pkgdesc="Screen magnifier"
	depends=("kdebase-runtime>=${_kdever}" "kdelibs>=${_kdever}")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="kmag"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-kmousetool()
{
	pkgdesc="Automatic mouse clicker"
	depends=("kdebase-runtime>=${_kdever}" "kdelibs>=${_kdever}")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="kmousetool"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-kmouth()
{
	pkgdesc="Speech synthesizer"
	depends=("kdebase-runtime>=${_kdever}" "kdelibs>=${_kdever}")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="kmouth"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}

package_kdeaccessibility-jovie()
{
	pkgdesc="Text-to-speech system"
	depends=("kdebase-runtime>=${_kdever}" "kdelibs>=${_kdever}" "speech-dispatcher>=0.6.7" 'opentts')
	conflicts=("${pkgbase}-kttsd" "${pkgbase}-ksayit")
	replaces=("${pkgbase}-kttsd" "${pkgbase}-ksayit")
	groups=("${pkgbase}" "kde" "kde-uninstall")

	splitdirs="jovie"
		for i in ${splitdirs} ; do
			cd ${srcdir}/${pkgbase}-${pkgver}/${i}
			make DESTDIR=${pkgdir} install
		done
}
